(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{683:function(e,t,a){"use strict";a.r(t);var s=a(1),o=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"blockchain"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockchain"}},[e._v("#")]),e._v(" Blockchain")]),e._v(" "),a("p",[e._v("Here we describe the data structures in the Tendermint blockchain and the rules for validating them.")]),e._v(" "),a("h2",{attrs:{id:"data-structures"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data-structures"}},[e._v("#")]),e._v(" Data Structures")]),e._v(" "),a("p",[e._v("The Tendermint blockchains consists of a short list of basic data types:")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("Block")])]),e._v(" "),a("li",[a("code",[e._v("Header")])]),e._v(" "),a("li",[a("code",[e._v("Version")])]),e._v(" "),a("li",[a("code",[e._v("BlockID")])]),e._v(" "),a("li",[a("code",[e._v("Time")])]),e._v(" "),a("li",[a("code",[e._v("Data")]),e._v(" (for transactions)")]),e._v(" "),a("li",[a("code",[e._v("Commit")]),e._v(" and "),a("code",[e._v("Vote")])]),e._v(" "),a("li",[a("code",[e._v("EvidenceData")]),e._v(" and "),a("code",[e._v("Evidence")])])]),e._v(" "),a("h2",{attrs:{id:"block"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#block"}},[e._v("#")]),e._v(" Block")]),e._v(" "),a("p",[e._v("A block consists of a header, transactions, votes (the commit),\nand a list of evidence of malfeasance (ie. signing conflicting votes).")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBCbG9jayBzdHJ1Y3QgewogICAgSGVhZGVyICAgICAgSGVhZGVyCiAgICBUeHMgICAgICAgICBEYXRhCiAgICBFdmlkZW5jZSAgICBFdmlkZW5jZURhdGEKICAgIExhc3RDb21taXQgIENvbW1pdAp9Cg=="}}),e._v(" "),a("p",[e._v("Note the "),a("code",[e._v("LastCommit")]),e._v(" is the set of  votes that committed the last block.")]),e._v(" "),a("h2",{attrs:{id:"header"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header"}},[e._v("#")]),e._v(" Header")]),e._v(" "),a("p",[e._v("A block header contains metadata about the block and about the consensus, as well as commitments to\nthe data in the current block, the previous block, and the results returned by the application:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBIZWFkZXIgc3RydWN0IHsKCS8vIGJhc2ljIGJsb2NrIGluZm8KCVZlcnNpb24gIFZlcnNpb24KCUNoYWluSUQgIHN0cmluZwoJSGVpZ2h0ICAgaW50NjQKCVRpbWUgICAgIFRpbWUKCU51bVR4cyAgIGludDY0CglUb3RhbFR4cyBpbnQ2NAoKCS8vIHByZXYgYmxvY2sgaW5mbwoJTGFzdEJsb2NrSUQgQmxvY2tJRAoKCS8vIGhhc2hlcyBvZiBibG9jayBkYXRhCglMYXN0Q29tbWl0SGFzaCBbXWJ5dGUgLy8gY29tbWl0IGZyb20gdmFsaWRhdG9ycyBmcm9tIHRoZSBsYXN0IGJsb2NrCglEYXRhSGFzaCAgICAgICBbXWJ5dGUgLy8gTWVya2xlUm9vdCBvZiB0cmFuc2FjdGlvbiBoYXNoZXMKCgkvLyBoYXNoZXMgZnJvbSB0aGUgYXBwIG91dHB1dCBmcm9tIHRoZSBwcmV2IGJsb2NrCglWYWxpZGF0b3JzSGFzaCAgICAgW11ieXRlIC8vIHZhbGlkYXRvcnMgZm9yIHRoZSBjdXJyZW50IGJsb2NrCglOZXh0VmFsaWRhdG9yc0hhc2ggW11ieXRlIC8vIHZhbGlkYXRvcnMgZm9yIHRoZSBuZXh0IGJsb2NrCglDb25zZW5zdXNIYXNoICAgICAgW11ieXRlIC8vIGNvbnNlbnN1cyBwYXJhbXMgZm9yIGN1cnJlbnQgYmxvY2sKCUFwcEhhc2ggICAgICAgICAgICBbXWJ5dGUgLy8gc3RhdGUgYWZ0ZXIgdHhzIGZyb20gdGhlIHByZXZpb3VzIGJsb2NrCglMYXN0UmVzdWx0c0hhc2ggICAgW11ieXRlIC8vIHJvb3QgaGFzaCBvZiBhbGwgcmVzdWx0cyBmcm9tIHRoZSB0eHMgZnJvbSB0aGUgcHJldmlvdXMgYmxvY2sKCgkvLyBjb25zZW5zdXMgaW5mbwoJRXZpZGVuY2VIYXNoICAgIFtdYnl0ZSAvLyBldmlkZW5jZSBpbmNsdWRlZCBpbiB0aGUgYmxvY2sKCVByb3Bvc2VyQWRkcmVzcyBbXWJ5dGUgLy8gb3JpZ2luYWwgcHJvcG9zZXIgb2YgdGhlIGJsb2NrCg=="}}),e._v(" "),a("p",[e._v("Further details on each of these fields is described below.")]),e._v(" "),a("h2",{attrs:{id:"version"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version"}},[e._v("#")]),e._v(" Version")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("Version")]),e._v(" contains the protocol version for the blockchain and the\napplication as two "),a("code",[e._v("uint64")]),e._v(" values:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBWZXJzaW9uIHN0cnVjdCB7CiAgICBCbG9jayAgIHVpbnQ2NAogICAgQXBwICAgICB1aW50NjQKfQo="}}),e._v(" "),a("h2",{attrs:{id:"blockid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#blockid"}},[e._v("#")]),e._v(" BlockID")]),e._v(" "),a("p",[e._v("The "),a("code",[e._v("BlockID")]),e._v(" contains two distinct Merkle roots of the block.\nThe first, used as the block's main hash, is the MerkleRoot\nof all the fields in the header (ie. "),a("code",[e._v("MerkleRoot(header)")]),e._v(".\nThe second, used for secure gossipping of the block during consensus,\nis the MerkleRoot of the complete serialized block\ncut into parts (ie. "),a("code",[e._v("MerkleRoot(MakeParts(block))")]),e._v(").\nThe "),a("code",[e._v("BlockID")]),e._v(" includes these two hashes, as well as the number of\nparts (ie. "),a("code",[e._v("len(MakeParts(block))")]),e._v(")")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBCbG9ja0lEIHN0cnVjdCB7CiAgICBIYXNoIFtdYnl0ZQogICAgUGFydHNIZWFkZXIgUGFydFNldEhlYWRlcgp9Cgp0eXBlIFBhcnRTZXRIZWFkZXIgc3RydWN0IHsKICAgIFRvdGFsIGludDMyCiAgICBIYXNoIFtdYnl0ZQp9Cg=="}}),e._v(" "),a("p",[e._v("See "),a("RouterLink",{attrs:{to:"/spec/blockchain/encoding.html#MerkleRoot"}},[e._v("MerkleRoot")]),e._v(" for details.")],1),e._v(" "),a("h2",{attrs:{id:"time"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time"}},[e._v("#")]),e._v(" Time")]),e._v(" "),a("p",[e._v("Tendermint uses the\n"),a("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/reference/csharp/class/google/protobuf/well-known-types/timestamp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Google.Protobuf.WellKnownTypes.Timestamp"),a("OutboundLink")],1),e._v("\nformat, which uses two integers, one for Seconds and for Nanoseconds.")]),e._v(" "),a("h2",{attrs:{id:"data"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#data"}},[e._v("#")]),e._v(" Data")]),e._v(" "),a("p",[e._v("Data is just a wrapper for a list of transactions, where transactions are\narbitrary byte arrays:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"dHlwZSBEYXRhIHN0cnVjdCB7CiAgICBUeHMgW11bXWJ5dGUKfQo="}}),e._v(" "),a("h2",{attrs:{id:"commit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#commit"}},[e._v("#")]),e._v(" Commit")]),e._v(" "),a("p",[e._v("Commit is a simple wrapper for a list of votes, with one vote for each\nvalidator. It also contains the relevant BlockID:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"dHlwZSBDb21taXQgc3RydWN0IHsKICAgIEJsb2NrSUQgICAgIEJsb2NrSUQKICAgIFByZWNvbW1pdHMgIFtdVm90ZQp9Cg=="}}),e._v(" "),a("p",[e._v("NOTE: this will likely change to reduce the commit size by eliminating redundant\ninformation - see "),a("a",{attrs:{href:"https://github.com/tendermint/tendermint/issues/1648",target:"_blank",rel:"noopener noreferrer"}},[e._v("issue #1648"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"vote"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vote"}},[e._v("#")]),e._v(" Vote")]),e._v(" "),a("p",[e._v("A vote is a signed message from a validator for a particular block.\nThe vote includes information about the validator signing it.")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"dHlwZSBWb3RlIHN0cnVjdCB7CglUeXBlICAgICAgICAgICAgIGJ5dGUKCUhlaWdodCAgICAgICAgICAgaW50NjQKCVJvdW5kICAgICAgICAgICAgaW50CglCbG9ja0lEICAgICAgICAgIEJsb2NrSUQKCVRpbWVzdGFtcCAgICAgICAgVGltZQoJVmFsaWRhdG9yQWRkcmVzcyBbXWJ5dGUKCVZhbGlkYXRvckluZGV4ICAgaW50CglTaWduYXR1cmUgICAgICAgIFtdYnl0ZQp9Cg=="}}),e._v(" "),a("p",[e._v("There are two types of votes:\na "),a("em",[e._v("prevote")]),e._v(" has "),a("code",[e._v("vote.Type == 1")]),e._v(" and\na "),a("em",[e._v("precommit")]),e._v(" has "),a("code",[e._v("vote.Type == 2")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"signature"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#signature"}},[e._v("#")]),e._v(" Signature")]),e._v(" "),a("p",[e._v("Signatures in Tendermint are raw bytes representing the underlying signature.")]),e._v(" "),a("p",[e._v("See the "),a("RouterLink",{attrs:{to:"/spec/blockchain/encoding.html#key-types"}},[e._v("signature spec")]),e._v(" for more.")],1),e._v(" "),a("h2",{attrs:{id:"evidencedata"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evidencedata"}},[e._v("#")]),e._v(" EvidenceData")]),e._v(" "),a("p",[e._v("EvidenceData is a simple wrapper for a list of evidence:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"dHlwZSBFdmlkZW5jZURhdGEgc3RydWN0IHsKICAgIEV2aWRlbmNlIFtdRXZpZGVuY2UKfQo="}}),e._v(" "),a("h2",{attrs:{id:"evidence"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evidence"}},[e._v("#")]),e._v(" Evidence")]),e._v(" "),a("p",[e._v("Evidence in Tendermint is implemented as an interface.\nThis means any evidence is encoded using its Amino prefix.\nThere is currently only a single type, the "),a("code",[e._v("DuplicateVoteEvidence")]),e._v(".")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"Ly8gYW1pbm8gbmFtZTogJnF1b3Q7dGVuZGVybWludC9EdXBsaWNhdGVWb3RlRXZpZGVuY2UmcXVvdDsKdHlwZSBEdXBsaWNhdGVWb3RlRXZpZGVuY2Ugc3RydWN0IHsKCVB1YktleSBQdWJLZXkKCVZvdGVBICBWb3RlCglWb3RlQiAgVm90ZQp9Cg=="}}),e._v(" "),a("p",[e._v("See the "),a("RouterLink",{attrs:{to:"/spec/blockchain/encoding.html#key-types"}},[e._v("pubkey spec")]),e._v(" for more.")],1),e._v(" "),a("h2",{attrs:{id:"validation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validation"}},[e._v("#")]),e._v(" Validation")]),e._v(" "),a("p",[e._v("Here we describe the validation rules for every element in a block.\nBlocks which do not satisfy these rules are considered invalid.")]),e._v(" "),a("p",[e._v("We abuse notation by using something that looks like Go, supplemented with English.\nA statement such as "),a("code",[e._v("x == y")]),e._v(" is an assertion - if it fails, the item is invalid.")]),e._v(" "),a("p",[e._v("We refer to certain globally available objects:\n"),a("code",[e._v("block")]),e._v(" is the block under consideration,\n"),a("code",[e._v("prevBlock")]),e._v(" is the "),a("code",[e._v("block")]),e._v(" at the previous height,\nand "),a("code",[e._v("state")]),e._v(" keeps track of the validator set, the consensus parameters\nand other results from the application. At the point when "),a("code",[e._v("block")]),e._v(" is the block under consideration,\nthe current version of the "),a("code",[e._v("state")]),e._v(" corresponds to the state\nafter executing transactions from the "),a("code",[e._v("prevBlock")]),e._v(".\nElements of an object are accessed as expected,\nie. "),a("code",[e._v("block.Header")]),e._v(".\nSee the "),a("RouterLink",{attrs:{to:"/spec/blockchain/state.html"}},[e._v("definition of "),a("code",[e._v("State")])]),e._v(".")],1),e._v(" "),a("h3",{attrs:{id:"header-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-2"}},[e._v("#")]),e._v(" Header")]),e._v(" "),a("p",[e._v("A Header is valid if its corresponding fields are valid.")]),e._v(" "),a("h3",{attrs:{id:"version-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#version-2"}},[e._v("#")]),e._v(" Version")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YmxvY2suVmVyc2lvbi5CbG9jayA9PSBzdGF0ZS5WZXJzaW9uLkJsb2NrCmJsb2NrLlZlcnNpb24uQXBwID09IHN0YXRlLlZlcnNpb24uQXBwCg=="}}),e._v(" "),a("p",[e._v("The block version must match the state version.")]),e._v(" "),a("h3",{attrs:{id:"chainid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#chainid"}},[e._v("#")]),e._v(" ChainID")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"bGVuKGJsb2NrLkNoYWluSUQpICZsdDsgNTAK"}}),e._v(" "),a("p",[e._v("ChainID must be less than 50 bytes.")]),e._v(" "),a("h3",{attrs:{id:"height"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#height"}},[e._v("#")]),e._v(" Height")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLkhlaWdodCAmZ3Q7IDAKYmxvY2suSGVhZGVyLkhlaWdodCA9PSBwcmV2QmxvY2suSGVhZGVyLkhlaWdodCArIDEK"}}),e._v(" "),a("p",[e._v("The height is an incrementing integer. The first block has "),a("code",[e._v("block.Header.Height == 1")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"time-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#time-2"}},[e._v("#")]),e._v(" Time")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"YmxvY2suSGVhZGVyLlRpbWVzdGFtcCAmZ3Q7PSBwcmV2QmxvY2suSGVhZGVyLlRpbWVzdGFtcCArIHN0YXRlLmNvbnNlbnN1c1BhcmFtcy5CbG9jay5UaW1lSW90YU1zCmJsb2NrLkhlYWRlci5UaW1lc3RhbXAgPT0gTWVkaWFuVGltZShibG9jay5MYXN0Q29tbWl0LCBzdGF0ZS5MYXN0VmFsaWRhdG9ycykK"}}),e._v(" "),a("p",[e._v("The block timestamp must be monotonic.\nIt must equal the weighted median of the timestamps of the valid votes in the block.LastCommit.")]),e._v(" "),a("p",[e._v("Note: the timestamp of a vote must be greater by at least one millisecond than that of the\nblock being voted on.")]),e._v(" "),a("p",[e._v("The timestamp of the first block must be equal to the genesis time (since\nthere's no votes to compute the median).")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"",base64:"aWYgYmxvY2suSGVhZGVyLkhlaWdodCA9PSAxIHsKICAgIGJsb2NrLkhlYWRlci5UaW1lc3RhbXAgPT0gZ2VuZXNpc1RpbWUKfQo="}}),e._v(" "),a("p",[e._v("See the section on "),a("RouterLink",{attrs:{to:"/spec/consensus/bft-time.html"}},[e._v("BFT time")]),e._v(" for more details.")],1),e._v(" "),a("h3",{attrs:{id:"numtxs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#numtxs"}},[e._v("#")]),e._v(" NumTxs")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLk51bVR4cyA9PSBsZW4oYmxvY2suVHhzLlR4cykK"}}),e._v(" "),a("p",[e._v("Number of transactions included in the block.")]),e._v(" "),a("h3",{attrs:{id:"totaltxs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#totaltxs"}},[e._v("#")]),e._v(" TotalTxs")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLlRvdGFsVHhzID09IHByZXZCbG9jay5IZWFkZXIuVG90YWxUeHMgKyBibG9jay5IZWFkZXIuTnVtVHhzCg=="}}),e._v(" "),a("p",[e._v("The cumulative sum of all transactions included in this blockchain.")]),e._v(" "),a("p",[e._v("The first block has "),a("code",[e._v("block.Header.TotalTxs = block.Header.NumberTxs")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"lastblockid"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastblockid"}},[e._v("#")]),e._v(" LastBlockID")]),e._v(" "),a("p",[e._v("LastBlockID is the previous block's BlockID:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"cHJldkJsb2NrUGFydHMgOj0gTWFrZVBhcnRzKHByZXZCbG9jaykKYmxvY2suSGVhZGVyLkxhc3RCbG9ja0lEID09IEJsb2NrSUQgewogICAgSGFzaDogTWVya2xlUm9vdChwcmV2QmxvY2suSGVhZGVyKSwKICAgIFBhcnRzSGVhZGVyewogICAgICAgIEhhc2g6IE1lcmtsZVJvb3QocHJldkJsb2NrUGFydHMpLAogICAgICAgIFRvdGFsOiBsZW4ocHJldkJsb2NrUGFydHMpLAogICAgfSwKfQo="}}),e._v(" "),a("p",[e._v("The first block has "),a("code",[e._v("block.Header.LastBlockID == BlockID{}")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"lastcommithash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastcommithash"}},[e._v("#")]),e._v(" LastCommitHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLkxhc3RDb21taXRIYXNoID09IE1lcmtsZVJvb3QoYmxvY2suTGFzdENvbW1pdC5QcmVjb21taXRzKQo="}}),e._v(" "),a("p",[e._v("MerkleRoot of the votes included in the block.\nThese are the votes that committed the previous block.")]),e._v(" "),a("p",[e._v("The first block has "),a("code",[e._v("block.Header.LastCommitHash == []byte{}")])]),e._v(" "),a("h3",{attrs:{id:"datahash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#datahash"}},[e._v("#")]),e._v(" DataHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLkRhdGFIYXNoID09IE1lcmtsZVJvb3QoSGFzaGVzKGJsb2NrLlR4cy5UeHMpKQo="}}),e._v(" "),a("p",[e._v("MerkleRoot of the hashes of transactions included in the block.")]),e._v(" "),a("p",[e._v("Note the transactions are hashed before being included in the Merkle tree,\nso the leaves of the Merkle tree are the hashes, not the transactions\nthemselves. This is because transaction hashes are regularly used as identifiers for\ntransactions.")]),e._v(" "),a("h3",{attrs:{id:"validatorshash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#validatorshash"}},[e._v("#")]),e._v(" ValidatorsHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suVmFsaWRhdG9yc0hhc2ggPT0gTWVya2xlUm9vdChzdGF0ZS5WYWxpZGF0b3JzKQo="}}),e._v(" "),a("p",[e._v("MerkleRoot of the current validator set that is committing the block.\nThis can be used to validate the "),a("code",[e._v("LastCommit")]),e._v(" included in the next block.\nNote the validators are sorted by their address before computing the MerkleRoot.")]),e._v(" "),a("h3",{attrs:{id:"nextvalidatorshash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#nextvalidatorshash"}},[e._v("#")]),e._v(" NextValidatorsHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suTmV4dFZhbGlkYXRvcnNIYXNoID09IE1lcmtsZVJvb3Qoc3RhdGUuTmV4dFZhbGlkYXRvcnMpCg=="}}),e._v(" "),a("p",[e._v("MerkleRoot of the next validator set that will be the validator set that commits the next block.\nThis is included so that the current validator set gets a chance to sign the\nnext validator sets Merkle root.\nNote the validators are sorted by their address before computing the MerkleRoot.")]),e._v(" "),a("h3",{attrs:{id:"consensushash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consensushash"}},[e._v("#")]),e._v(" ConsensusHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suQ29uc2Vuc3VzSGFzaCA9PSBzdGF0ZS5Db25zZW5zdXNQYXJhbXMuSGFzaCgpCg=="}}),e._v(" "),a("p",[e._v("Hash of the amino-encoding of a subset of the consensus parameters.")]),e._v(" "),a("h3",{attrs:{id:"apphash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apphash"}},[e._v("#")]),e._v(" AppHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suQXBwSGFzaCA9PSBzdGF0ZS5BcHBIYXNoCg=="}}),e._v(" "),a("p",[e._v("Arbitrary byte array returned by the application after executing and commiting the previous block. It serves as the basis for validating any merkle proofs that comes from the ABCI application and represents the state of the actual application rather than the state of the blockchain itself.")]),e._v(" "),a("p",[e._v("The first block has "),a("code",[e._v("block.Header.AppHash == []byte{}")]),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"lastresultshash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastresultshash"}},[e._v("#")]),e._v(" LastResultsHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suUmVzdWx0c0hhc2ggPT0gTWVya2xlUm9vdChzdGF0ZS5MYXN0UmVzdWx0cykK"}}),e._v(" "),a("p",[e._v("MerkleRoot of the results of the transactions in the previous block.")]),e._v(" "),a("p",[e._v("The first block has "),a("code",[e._v("block.Header.ResultsHash == []byte{}")]),e._v(".")]),e._v(" "),a("h2",{attrs:{id:"evidencehash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evidencehash"}},[e._v("#")]),e._v(" EvidenceHash")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suRXZpZGVuY2VIYXNoID09IE1lcmtsZVJvb3QoYmxvY2suRXZpZGVuY2UpCg=="}}),e._v(" "),a("p",[e._v("MerkleRoot of the evidence of Byzantine behaviour included in this block.")]),e._v(" "),a("h3",{attrs:{id:"proposeraddress"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#proposeraddress"}},[e._v("#")]),e._v(" ProposerAddress")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"YmxvY2suSGVhZGVyLlByb3Bvc2VyQWRkcmVzcyBpbiBzdGF0ZS5WYWxpZGF0b3JzCg=="}}),e._v(" "),a("p",[e._v("Address of the original proposer of the block. Must be a current validator.")]),e._v(" "),a("h2",{attrs:{id:"txs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#txs"}},[e._v("#")]),e._v(" Txs")]),e._v(" "),a("p",[e._v("Arbitrary length array of arbitrary length byte-arrays.")]),e._v(" "),a("h2",{attrs:{id:"lastcommit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lastcommit"}},[e._v("#")]),e._v(" LastCommit")]),e._v(" "),a("p",[e._v("The first height is an exception - it requires the LastCommit to be empty:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"aWYgYmxvY2suSGVhZGVyLkhlaWdodCA9PSAxIHsKICAgIGxlbihiLkxhc3RDb21taXQpID09IDAKfQo="}}),e._v(" "),a("p",[e._v("Otherwise, we require:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"bGVuKGJsb2NrLkxhc3RDb21taXQpID09IGxlbihzdGF0ZS5MYXN0VmFsaWRhdG9ycykKdGFsbGllZFZvdGluZ1Bvd2VyIDo9IDAKZm9yIGksIHZvdGUgOj0gcmFuZ2UgYmxvY2suTGFzdENvbW1pdHsKICAgIGlmIHZvdGUgPT0gbmlsewogICAgICAgIGNvbnRpbnVlCiAgICB9CiAgICB2b3RlLlR5cGUgPT0gMgogICAgdm90ZS5IZWlnaHQgPT0gYmxvY2suTGFzdENvbW1pdC5IZWlnaHQoKQogICAgdm90ZS5Sb3VuZCA9PSBibG9jay5MYXN0Q29tbWl0LlJvdW5kKCkKICAgIHZvdGUuQmxvY2tJRCA9PSBibG9jay5MYXN0QmxvY2tJRAoKICAgIHZhbCA6PSBzdGF0ZS5MYXN0VmFsaWRhdG9yc1tpXQogICAgdm90ZS5WZXJpZnkoYmxvY2suQ2hhaW5JRCwgdmFsLlB1YktleSkgPT0gdHJ1ZQoKICAgIHRhbGxpZWRWb3RpbmdQb3dlciArPSB2YWwuVm90aW5nUG93ZXIKfQoKdGFsbGllZFZvdGluZ1Bvd2VyICZndDsgKDIvMykgKiBUb3RhbFZvdGluZ1Bvd2VyKHN0YXRlLkxhc3RWYWxpZGF0b3JzKQo="}}),e._v(" "),a("p",[e._v("Includes one (possibly nil) vote for every current validator.\nNon-nil votes must be Precommits.\nAll votes must be for the same height and round.\nAll votes must be for the previous block.\nAll votes must have a valid signature from the corresponding validator.\nThe sum total of the voting power of the validators that voted\nmust be greater than 2/3 of the total voting power of the complete validator set.")]),e._v(" "),a("p",[e._v("The number of votes in a commit is limited to 10000 (see "),a("code",[e._v("types.MaxVotesCount")]),e._v(").")]),e._v(" "),a("h3",{attrs:{id:"vote-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vote-2"}},[e._v("#")]),e._v(" Vote")]),e._v(" "),a("p",[e._v("A vote is a signed message broadcast in the consensus for a particular block at a particular height and round.\nWhen stored in the blockchain or propagated over the network, votes are encoded in Amino.\nFor signing, votes are represented via "),a("code",[e._v("CanonicalVote")]),e._v(" and also encoded using amino (protobuf compatible) via\n"),a("code",[e._v("Vote.SignBytes")]),e._v(" which includes the "),a("code",[e._v("ChainID")]),e._v(", and uses a different ordering of\nthe fields.")]),e._v(" "),a("p",[e._v("We define a method "),a("code",[e._v("Verify")]),e._v(" that returns "),a("code",[e._v("true")]),e._v(" if the signature verifies against the pubkey for the "),a("code",[e._v("SignBytes")]),e._v("\nusing the given ChainID:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"ZnVuYyAodm90ZSAqVm90ZSkgVmVyaWZ5KGNoYWluSUQgc3RyaW5nLCBwdWJLZXkgY3J5cHRvLlB1YktleSkgZXJyb3IgewoJaWYgIWJ5dGVzLkVxdWFsKHB1YktleS5BZGRyZXNzKCksIHZvdGUuVmFsaWRhdG9yQWRkcmVzcykgewoJCXJldHVybiBFcnJWb3RlSW52YWxpZFZhbGlkYXRvckFkZHJlc3MKCX0KCglpZiAhcHViS2V5LlZlcmlmeUJ5dGVzKHZvdGUuU2lnbkJ5dGVzKGNoYWluSUQpLCB2b3RlLlNpZ25hdHVyZSkgewoJCXJldHVybiBFcnJWb3RlSW52YWxpZFNpZ25hdHVyZQoJfQoJcmV0dXJuIG5pbAp9Cg=="}}),e._v(" "),a("p",[e._v("where "),a("code",[e._v("pubKey.Verify")]),e._v(" performs the appropriate digital signature verification of the "),a("code",[e._v("pubKey")]),e._v("\nagainst the given signature and message bytes.")]),e._v(" "),a("h2",{attrs:{id:"evidence-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#evidence-2"}},[e._v("#")]),e._v(" Evidence")]),e._v(" "),a("p",[e._v("There is currently only one kind of evidence, "),a("code",[e._v("DuplicateVoteEvidence")]),e._v(".")]),e._v(" "),a("p",[e._v("DuplicateVoteEvidence "),a("code",[e._v("ev")]),e._v(" is valid if")]),e._v(" "),a("ul",[a("li",[a("code",[e._v("ev.VoteA")]),e._v(" and "),a("code",[e._v("ev.VoteB")]),e._v(" can be verified with "),a("code",[e._v("ev.PubKey")])]),e._v(" "),a("li",[a("code",[e._v("ev.VoteA")]),e._v(" and "),a("code",[e._v("ev.VoteB")]),e._v(" have the same "),a("code",[e._v("Height, Round, Address, Index, Type")])]),e._v(" "),a("li",[a("code",[e._v("ev.VoteA.BlockID != ev.VoteB.BlockID")])]),e._v(" "),a("li",[a("code",[e._v("(block.Height - ev.VoteA.Height) < MAX_EVIDENCE_AGE")])])]),e._v(" "),a("h1",{attrs:{id:"execution"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#execution"}},[e._v("#")]),e._v(" Execution")]),e._v(" "),a("p",[e._v("Once a block is validated, it can be executed against the state.")]),e._v(" "),a("p",[e._v("The state follows this recursive equation:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"c3RhdGUoMSkgPSBJbml0aWFsU3RhdGUKc3RhdGUoaCsxKSAmbHQ7LSBFeGVjdXRlKHN0YXRlKGgpLCBBQkNJQXBwLCBibG9jayhoKSkK"}}),e._v(" "),a("p",[e._v("where "),a("code",[e._v("InitialState")]),e._v(" includes the initial consensus parameters and validator set,\nand "),a("code",[e._v("ABCIApp")]),e._v(" is an ABCI application that can return results and changes to the validator\nset (TODO). Execute is defined as:")]),e._v(" "),a("tm-code-block",{staticClass:"codeblock",attrs:{language:"go",base64:"RXhlY3V0ZShzIFN0YXRlLCBhcHAgQUJDSUFwcCwgYmxvY2sgQmxvY2spIFN0YXRlIHsKICAgIC8vIEZ1Y3Rpb24gQXBwbHlCbG9jayBleGVjdXRlcyBibG9jayBvZiB0cmFuc2FjdGlvbnMgYWdhaW5zdCB0aGUgYXBwIGFuZCByZXR1cm5zIHRoZSBuZXcgcm9vdCBoYXNoIG9mIHRoZSBhcHAgc3RhdGUsCiAgICAvLyBtb2RpZmljYXRpb25zIHRvIHRoZSB2YWxpZGF0b3Igc2V0IGFuZCB0aGUgY2hhbmdlcyBvZiB0aGUgY29uc2Vuc3VzIHBhcmFtZXRlcnMuCiAgICBBcHBIYXNoLCBWYWxpZGF0b3JDaGFuZ2VzLCBDb25zZW5zdXNQYXJhbUNoYW5nZXMgOj0gYXBwLkFwcGx5QmxvY2soYmxvY2spCgogICAgcmV0dXJuIFN0YXRlewogICAgICAgIExhc3RSZXN1bHRzOiBhYmNpUmVzcG9uc2VzLkRlbGl2ZXJUeFJlc3VsdHMsCiAgICAgICAgQXBwSGFzaDogQXBwSGFzaCwKICAgICAgICBMYXN0VmFsaWRhdG9yczogc3RhdGUuVmFsaWRhdG9ycywKICAgICAgICBWYWxpZGF0b3JzOiBzdGF0ZS5OZXh0VmFsaWRhdG9ycywKICAgICAgICBOZXh0VmFsaWRhdG9yczogVXBkYXRlVmFsaWRhdG9ycyhzdGF0ZS5OZXh0VmFsaWRhdG9ycywgVmFsaWRhdG9yQ2hhbmdlcyksCiAgICAgICAgQ29uc2Vuc3VzUGFyYW1zOiBVcGRhdGVDb25zZW5zdXNQYXJhbXMoc3RhdGUuQ29uc2Vuc3VzUGFyYW1zLCBDb25zZW5zdXNQYXJhbUNoYW5nZXMpLAogICAgfQp9Cg=="}})],1)}),[],!1,null,null,null);t.default=o.exports}}]);